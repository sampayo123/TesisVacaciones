@page "/usuarios"
@inject HttpClient http
@using VacacionesTesisApp.Shared
@using Blazorise.DataGrid
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize(Roles = "Admin")]
@attribute [Authorize]





@if(Lista==null)
{
    <Loader/>
}
else if (Lista.Count == 0)
{
    <div class="form-row">
        <div class="col-md-8 col-sm-6 mb-3" align="left">
            <h3>Administrar Usuarios</h3>
            <small style="text-decoration-color:dimgrey"> &nbsp;Lista de usuarios</small>
        </div>
        <div class="col-md-4 col-sm-6 mb-3" align="right">
            <h5>
                <span aria-hidden="true"></span> &nbsp;Fecha: @dateInputValue
            </h5>
        </div>
    </div>

    <hr />

    <div class="form-row">
        <div class="col-md-10 mb-3" align="right">
            <TextEdit @bind-Text="@customFilterValue" Placeholder="Buscar usuarios..." />
        </div>
    </div>
    <br />

    <text>No hay registros.</text> }
else
{
    <div class="form-row">
        <div class="col-md-8 col-sm-6 mb-3" align="left">
            <h3>Administrar Usuarios</h3>
            <small style="text-decoration-color:dimgrey"> &nbsp;Lista de usuarios</small>
        </div>
        <div class="col-md-4 col-sm-6 mb-3" align="right">
            <h5>
                <span aria-hidden="true"></span> &nbsp;Fecha: @dateInputValue
            </h5>
        </div>
    </div>

    <hr />

    <div class="form-row">
        <div class="col-md-10 mb-3" align="right">
            <TextEdit @bind-Text="@customFilterValue" Placeholder="Buscar usuarios..." />
        </div>
    </div>
    <br />

    <DataGrid TItem="UsuarioModel" Data="Lista" CustomFilter="@OnCustomFilter"
              ShowPager="true" PageSize="8" SelectedRowStyling="@OnSelectedRowStyling"
              Striped="true">


        <ChildContent>
            <DataGridColumn TItem="UsuarioModel" Field="@nameof(UsuarioModel.Nombre)"
                            Caption="Nombre"></DataGridColumn>

            <DataGridColumn TItem="UsuarioModel" Field="@nameof(UsuarioModel.Email)"
                            Caption="Email"></DataGridColumn>

            <DataGridColumn TItem="UsuarioModel" Field="@nameof(UsuarioModel.Rol)"
                            Caption="Rol"></DataGridColumn>


            <DataGridColumn TItem="UsuarioModel" Caption="Acciones" Field="@nameof(UsuarioModel.UserId)">
                <DisplayTemplate>
                    <Button Color="Color.Primary" title="Editar rol" @onclick="@(() => EditarItem(context.UserId))">
                        <Icon Name="Blazorise.Icons.FontAwesome.FontAwesomeIcons.UserCog" Style="" />
                    </Button>
                </DisplayTemplate>
            </DataGridColumn>
        </ChildContent>

        <PreviousPageButtonTemplate>
            <StringEnBotones TipoBoton="atras" />
        </PreviousPageButtonTemplate>
        <NextPageButtonTemplate>
            <StringEnBotones TipoBoton="siguiente" />
        </NextPageButtonTemplate>
        <FirstPageButtonTemplate>
            <StringEnBotones TipoBoton="primero" />
        </FirstPageButtonTemplate>
        <LastPageButtonTemplate>
            <StringEnBotones TipoBoton="ultimo" />
        </LastPageButtonTemplate>

    </DataGrid>}



@code
{ public List<UsuarioModel> Lista;
    private UsuarioModel usuarioMostrar = new UsuarioModel();


    private string dateInputValue;
    string customFilterValue;

    protected override void OnInitialized()
    {
        dateInputValue = DateTime.Now.ToString("dd/MM/yyyy");//Fecha del día actual
    }

    protected override async Task OnInitializedAsync()
    {
        Lista = await http.GetFromJsonAsync<List<UsuarioModel>>("api/Usuarios");
    }


    void EditarItem(string Id)
    {

        navigationManager.NavigateTo($"/usuarios/editar/{Id}");
    }


    void EditarItem2(string Id)
    {

        navigationManager.NavigateTo($"/usuarios/editarnombre/{Id}");
    }


    bool OnCustomFilter(UsuarioModel model)
    {
        if (string.IsNullOrEmpty(customFilterValue))
            return true;

        return
            model.Nombre?.Contains(customFilterValue, StringComparison.OrdinalIgnoreCase) == true;


    }

    void OnSelectedRowStyling(UsuarioModel usuarioModel, DataGridRowStyling styling)
    {
        styling.Background = Background.Info;

    }
}